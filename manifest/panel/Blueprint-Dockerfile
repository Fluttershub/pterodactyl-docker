FROM alpine:3.18

LABEL maintainer="hotarublaze <https://github.com/HotaruBlaze>"

ARG VERSION

ENV STARTUP_TIMEOUT=5 \
    PANEL_VERSION=${VERSION}

WORKDIR /app

RUN echo http://dl-cdn.alpinelinux.org/alpine/v3.18/community/ >> /etc/apk/repositories

RUN apk --update add curl gettext nginx php81 php81-bcmath php81-common php81-dom php81-fileinfo php81-posix \
    php81-fpm php81-gd php81-mbstring php81-openssl php81-pdo php81-phar php81-json php81-sodium php81-xmlwriter \
    php81-pdo_mysql php81-session php81-curl php81-simplexml php81-xml php81-tokenizer php81-ctype php81-zlib php81-zip tini \
    && mkdir -p /app /run/nginx /etc/nginx/conf.d/


RUN \
 curl -Lo panel.tar.gz https://github.com/pterodactyl/panel/releases/download/${PANEL_VERSION}/panel.tar.gz \
 && tar -xzvf panel.tar.gz \
 && rm panel.tar.gz \
 && chmod -R 755 storage/* bootstrap/cache \
 && find storage -type d > .storage.tmpl \
 && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \
 && cp .env.example .env \
 && composer install --ansi --no-dev --optimize-autoloader \
 && rm .env ./storage -rf \
 && chown nginx:nginx * -R

COPY ./ /

# Remove Migration that isn't compatible
RUN rm /app/database/migrations/2020_10_10_165437_change_unique_database_name_to_account_for_server.php

RUN \
    ln -s /data/storage storage; \
    ln -s /data/pterodactyl.conf .env;

RUN \
    dos2unix /entrypoint.sh; \
    dos2unix /usr/local/bin/wait-for;

VOLUME [ "/data" ]

# Expose HTTP
EXPOSE 80


# 
# Lets start trying to setup blueprint
# 
RUN apk update && apk add --no-cache \
    unzip \
    zip \
    curl \
    git \
    bash \
    wget \
    nodejs \
    npm \
    coreutils \
    build-base \
    musl-dev \
    libgcc \
    openssl \
    openssl-dev \
    linux-headers \
    ncurses \
    rsync \
    inotify-tools

# Environment for NVM and Node.js installation
ENV NVM_DIR="/root/.nvm"
ENV NODE_BASE_VERSION="20"
# Set unofficial Node.js builds mirror for musl
ENV NVM_NODEJS_ORG_MIRROR="https://unofficial-builds.nodejs.org/download/release"

# Install NVM and configure the environment
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash \
    && [ -s $NVM_DIR/nvm.sh ] && \. $NVM_DIR/nvm.sh \
    && echo "nvm_get_arch() { nvm_echo 'x64-musl'; }" >> $NVM_DIR/nvm.sh \
    && source $NVM_DIR/nvm.sh \
    && nvm install v20.14.0 \
    && npm config set prefix /usr \
    && npm install -g yarn \
    && yarn

RUN wget $(curl -s https://api.github.com/repos/BlueprintFramework/framework/releases/latest | grep 'browser_download_url' | cut -d '"' -f 4) -O blueprint.zip
RUN unzip -o blueprint.zip -d /app
RUN rm blueprint.zip

ENV TERM=xterm

RUN sed -i -E \
    -e "s|OWNERSHIP=\"www-data:www-data\" #;|OWNERSHIP=\"nginx:nginx\" #;|g" \
    -e "s|WEBUSER=\"www-data\" #;|WEBUSER=\"nginx\" #;|g" \
    blueprint.sh

# Make the script executable and run it
RUN chmod +x blueprint.sh \
    && bash blueprint.sh || true

RUN mkdir -p /blueprint_extensions /app

# Create the listen.sh script to monitor and sync blueprint files
RUN echo -e '#!/bin/sh\n\
# Initial sync on startup to ensure /app is up to date with /blueprint_extensions\n\
rsync -av --exclude=".blueprint" --include="*.blueprint*" --exclude="*" --delete /blueprint_extensions/ /app/\n\
# Continuously watch for file changes in /blueprint_extensions\n\
while inotifywait -r -e create,delete,modify,move --include=".*\\.blueprint$" /blueprint_extensions; do\n\
    rsync -av --exclude=".blueprint" --include="*.blueprint*" --exclude="*" --delete /blueprint_extensions/ /app/\n\
done' > /listen.sh && chmod +x /listen.sh

ENTRYPOINT [ "/sbin/tini", "--", "/entrypoint.sh" ]

CMD [ "p:start" ]
